<script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload@17.4.0/dist/lazyload.min.js"></script>
<link rel="stylesheet" href="./styles/cards.css">
<link rel="stylesheet" href="./styles/search.css">
{{!-- {{#if searching}} --}}
	<div class="search">
		<input onkeyup="event.key === 'Enter' ? (location=`/search?q=${encodeURIComponent(this.value)}`) : ''" placeholder='Search here' class="search_box" value="{{search}}"><button class="search_btn" onclick="location = `/search?q=${escape(document.querySelector('.search_box').value)}`"><span class="iconify" data-icon="bi:search" data-inline="false"></span></button>
	</div>
{{!-- {{/if}} --}}

{{#unless projects}}
	<h1 class="message">No search results found</h1>
{{/unless}}

{{#projects}}
	<div class="big">
		<article class="container">
			<div class="box">
				<img class="lazy" data-src="{{image}}" alt="">
			</div>
			<div class="content">
				<p class="tags">
					{{#tags}}
						<span class="tag">{{{this}}}</span>
					{{/tags}}
				</p>

				<h1 class="title"><a href="{{link}}">{{title}}</a></h1>

				{{!-- <p class="metadata">
				<span class="rating">★★★★<span>☆</span></span>
				<span class="votes">June 2021</span>
			</p> --}}

				<p class="desc">{{description}}</p>
				<div class="buttons">
					<a href="{{link}}"><button class="save" type="button">
							<span class="iconify" data-icon="akar-icons:play" data-inline="false"></span>
							View
						</button></a>
					<a href="{{code_link}}">
						<button class="save" type="button">
							<span class="iconify" data-icon="bx:bx-code-curly" data-inline="false"></span>
							Code
						</button>
					</a>
				</div>
			</div>
		</article>
	</div>
{{/projects}}
<script>
	var lazyLoadInstance = new LazyLoad({
		// Your custom settings go here
	});
</script>
<script>
	document.addEventListener("scroll", () => {
		[...document.querySelectorAll(".big")].forEach((el) => {
			if (visible(el)){
				el.classList.add("view_visible");
				el.classList.remove("view_hidden")
			} else {
				el.classList.add("view_hidden");
				el.classList.remove("view_visible")
			}
		})
	})
	function visible(el, percentVisible = 10) {
  let
    rect = el.getBoundingClientRect(),
    windowHeight = (window.innerHeight || document.documentElement.clientHeight);

  return !(
    Math.floor(100 - (((rect.top >= 0 ? 0 : rect.top) / +-rect.height) * 100)) < percentVisible ||
    Math.floor(100 - ((rect.bottom - windowHeight) / rect.height) * 100) < percentVisible
  )
};
</script>
<script>
	// if('serviceWorker' in navigator){
	// 	navigator.serviceWorker.register('sw.js')
	// 		.then(reg => console.log('Service worker registered'))
	// 		.catch(err => console.log('Service worker not registered', err));
	// }
</script>