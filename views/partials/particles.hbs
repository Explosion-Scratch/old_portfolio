<canvas></canvas>
<script>
const canvas = document.querySelector("canvas");
const ctx = canvas.getContext("2d", { alpha: false });

const particles = [];

const mouse = {};

window.addEventListener("resize", resize);
window.addEventListener("click", add(50));
window.addEventListener("mousemove", add(2));
window.addEventListener('touchmove', function(e) {
  for (let touch of e.touches) {
    particles.push(new Particle(touch.clientX, touch.clientY));
  }
});

function add(x) {
  return (e) => {
    mouse.x = e.clientX;
    mouse.y = e.clientY;
    for (let i = 0; i < 2; i++) particles.push(new Particle());
  };
}
function resize() {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
}

// Start out with some particles
(() => {
  for (let i = 0; i < 100; i++) {
    particles.push(new Particle(Math.random() * window.innerWidth, Math.random() * window.innerHeight));
  }
  resize();
})();

setInterval(() => {
	particles.push(new Particle(Math.random() * window.innerWidth, Math.random() * window.innerHeight));
}, 10);

(function loop() {
	ctx.fillStyle = `#fff9`;
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  // ctx.clearRect(0, 0, canvas.width, canvas.height);
  update();
	requestAnimationFrame(loop)
})();


function update() {
  for (let i = 0; i < particles.length; i++) {
    const particle = particles[i];
    particle.update();
    particle.draw();
    for (let j = i; j < particles.length; j++) {
      const particle2 = particles[j];
      const distance = Math.hypot(
        particle.x - particle2.x,
        particle.y - particle2.y
      );
      if (distance < 100) {
        ctx.beginPath();
        ctx.strokeStyle = particle.color;
        ctx.lineWidth = particle.size / 10;
        ctx.moveTo(particle.x, particle.y);
        ctx.lineTo(particle2.x, particle2.y);
        ctx.stroke();
        ctx.closePath();
      }
    }
    const buf = 50;
    if (
      particle.size <= 0.3 ||
      particle.x + buf < 0 ||
      particle.x - buf > canvas.width ||
      particle.y + buf < 0 ||
      particle.y - buf > canvas.height
    ) {
      particles.splice(i--, 1);
    }
  }
}
function Particle(x, y) {
  this.x = x || mouse.x;
  this.y = y || mouse.y;
  this.size = Math.random() * 10 + 1;
  this.speed = { x: Math.random() * 3 - 1.5, y: Math.random() * 3 - 1.5 };
	const cols = ["#1bc7ab", "#0da58c"];
  this.color = cols[Math.floor(Math.random() * cols.length)];
  this.update = () => {
    this.x += this.speed.x;
    this.y += this.speed.y;
    if (this.size > 0.2) this.size -= 0.1;
  };
  this.draw = () => {
    ctx.globalAlpha = 0.5;
    ctx.fillStyle = this.color;
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.size / 2, 0, Math.PI * 2);
    ctx.fill();
  };
  return this;
}
</script>